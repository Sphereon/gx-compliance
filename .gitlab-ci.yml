stages:
  - test
  - build
  - deploy
  - release

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: '/certs'
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_DOCS_TEST_IMAGE: $CI_REGISTRY_IMAGE:docs

lint:code:
  image: node:16
  stage: test
  script:
    - npm ci
    - npm run lint

test:
 image: node:16
 stage: test
 script:
   - npm install
   - npm run test

test-e2e:
 image: node:16
 stage: test
 script:
   - npm install
   - npm run test:e2e

build:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE --target production-build-stage .
    - docker push $CONTAINER_TEST_IMAGE
  except:
    - tags

deploy-on-lab:
  image: ubuntu
  stage: deploy
  before_script:
    - apt update && apt install -y curl
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  script:
    - helm upgrade --install -n "$CI_COMMIT_REF_SLUG" --create-namespace gx-compliance ./k8s/gx-compliance --set "nameOverride=$CI_COMMIT_REF_SLUG,ingress.hosts[0].host=compliance.lab.gaia-x.eu,ingress.hosts[0].paths[0].path=/$CI_COMMIT_REF_SLUG,image.tag=$CI_COMMIT_REF_SLUG,ingress.hosts[0].paths[0].pathType=Prefix,privateKey=$complianceKey,X509_CERTIFICATE=$complianceCert" --kubeconfig "$GXDCH_KUBECONFIG"
  only:
    - "2206-unreleased"
    - main
    - development

make-semantic-release:
  image: node:18
  stage: release
  before_script:
    - apt-get update -y && apt-get install -yqqf openssh-client git unzip sshpass rsync --fix-missing
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$CI_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - git config --global user.email "cto@gaia-x.eu"
    - git config --global user.name "semantic-release-bot"
  script:
    - npm i
    - ./node_modules/.bin/semantic-release
  only:
    - main

#doc management
build-docs:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_DOCS_TEST_IMAGE docs/
    - docker push $CONTAINER_DOCS_TEST_IMAGE
  only:
    - main

deploy-doc-on-lab:
  image: ubuntu
  stage: deploy
  before_script:
    - apt update && apt install -y curl
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  script:
    - helm upgrade --install -n "main" --create-namespace gx-compliance-docs ./docs/k8s/gx-compliance-docs --kubeconfig "$GXDCH_KUBECONFIG"
  only:
    - main

# Tags build & deployment
build-release-tag-image:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG} --target production-build-stage . #vX.Y.Z tag
    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG}
    - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG%%.*} $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG%.*} #vX.Y tag
    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG%.*}
    - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG} $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG%%.*} #vX tag
    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG%%.*}
  only:
    - tags

deploy-tag-on-lab:
  image: ubuntu
  stage: deploy
  before_script:
    - apt update && apt install -y curl
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  script:
    - helm upgrade --install -n "${CI_COMMIT_TAG%%.*}" --create-namespace gx-compliance ./k8s/gx-compliance --set "nameOverride=$DEPLOY_PATH,ingress.hosts[0].host=compliance.lab.gaia-x.eu,ingress.hosts[0].paths[0].path=/${CI_COMMIT_TAG%%.*},image.tag=${CI_COMMIT_TAG%%.*},ingress.hosts[0].paths[0].pathType=Prefix,privateKey=$complianceKey,X509_CERTIFICATE=$complianceCert" --kubeconfig "$GXDCH_KUBECONFIG"
  only:
    - tags