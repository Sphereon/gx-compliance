stages:
  - test
  - build
  - deploy
  - release

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: '/certs'
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

lint:code:
  image: node:16
  stage: test
  script:
    - npm ci
    - npm run lint

test:
 image: node:16
 stage: test
 script:
   - npm install
   - npm run test

test-e2e:
 image: node:16
 stage: test
 script:
   - npm install
   - npm run test:e2e

build:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE --target production-build-stage .
    - docker push $CONTAINER_TEST_IMAGE

make-release:
  image: node:18
  stage: release
  before_script:
    - apt-get update -y && apt-get install -yqqf openssh-client git unzip sshpass rsync --fix-missing
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$CI_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - ssh-keyscan $GITLAB_URL >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - git config --global user.email "cto@gaia-x.eu"
    - git config --global user.name "semantic-release-bot"
  script:
    - npm i
    - semantic-release
  only:
    - main

release-image:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: release
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main
    - development

deploy-on-lab:
  image: ubuntu
  stage: deploy
  before_script:
    - apt update && apt install -y curl
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  script:
    - |
     if [ -n "$CI_COMMIT_TAG" ] && [[ "$CI_COMMIT_TAG" == v* ]]; then
       DEPLOY_PATH=${CI_COMMIT_TAG%%.*}  
     else
       DEPLOY_PATH=$CI_COMMIT_REF_SLUG       
     fi
     echo $DEPLOY_PATH
    - helm upgrade --install -n "$DEPLOY_PATH" --create-namespace gx-compliance ./k8s/gx-compliance --set "nameOverride=$DEPLOY_PATH,ingress.hosts[0].host=compliance.lab.gaia-x.eu,ingress.hosts[0].paths[0].path=/$DEPLOY_PATH,image.tag=$CI_COMMIT_REF_SLUG,ingress.hosts[0].paths[0].pathType=Prefix,privateKey=$complianceKey,X509_CERTIFICATE=$complianceCert" --kubeconfig "$GXDCH_KUBECONFIG"
  only:
    - tags
    - "2206-unreleased"
    - main
    - development